/*
 * Copyright (c) 2020 Google LLC.
 *
 * SPDX-License-Identifier: Apache-2.0
 */

/dts-v1/;
#include <atmel/samd5xx18.dtsi>

/ {
	model = "Telescope Mirror Tester";

	chosen {
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,code-partition = &code_partition;
	};

	motors {
		motors_1_2: pwm_motors_1_2 {
			pwm_1a = <&tcc0 0>;
			pwm_1b = <&tcc0 1>;
			pwm_2a = <&tcc0 3>;
			pwm_2b = <&tcc0 2>;
			fault_flag = <&porta 13>;
			sleep_command = <&porta 12>;
		};

		motors_3_4: pwm_motors_3_4 {
			pwm_3a = <&tcc0 4>;
			pwm_3b = <&tcc0 5>;
			pwm_4a = <&tcc3 1>;
			pwm_4b = <&tcc3 0>;
			fault_flag = <&portb 14>;
			sleep_command = <&portb 15>;
		};
	};

	limit_switches {
		x_start = <&portb 14>;
		x_end = <&portb 14>;
		y_start = <&portb 14>;
		y_end = <&portb 14>;
		z_start = <&portb 14>;
		z_end = <&portb 14>;
	};
};

&cpu0 {
	clock-frequency = <120000000>;
};

&sercom0 {
	status = "okay";
	compatible = "atmel,sam0-spi";
	current-speed = <115200>;
	rxpo = <1>;
	txpo = <0>;

	x_pos_sensor: pwm3360@0 {
		compatible = "";
		label = "PMW3360";
		reg = <0>;
	};

	y_pos_sensor: pwm3360@1 {
		compatible = "";
		label = "PMW3360";
		reg = <1>;
	};
};

&sercom5 {
	status = "okay";
	compatible = "atmel,sam0-i2c";
	dipo = <3>;
	dopo = <0>;

	#address-cells = <1>;
	#size-cells = <0>;

	laser_dac: mcp4716@63 {
		compatible = "";
		label = "MCP4716";
		reg = <0x63>;
	};
};

&tcc0 {
	status = "okay";
	compatible = "atmel,sam0-tcc-pwm";
	prescaler = <8>;

	#pwm-cells = <1>;
};

&tcc3 {
	status = "okay";
	compatible = "atmel,sam0-tcc-pwm";
	prescaler = <8>;

	#pwm-cells = <1>;
};

&porta {
	status = "okay";
	compatible = "atmel,sam0-gpio";
	gpio-controller;
	#gpio-cells = <2>;
};

&portb {
	status = "okay";
	compatible = "atmel,sam0-gpio";
	gpio-controller;
	#gpio-cells = <2>;
};

&usb0 {
	status = "okay";
};

&dmac {
	status = "okay";
};

&eic {
	status = "okay";
};

&flash0 {
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		boot_partition: partition@0 {
			label = "uf2";
			reg = <0x00000000 DT_SIZE_K(16)>;
			read-only;
		};

		code_partition: partition@4000 {
			label = "code";
			reg = <0x4000 DT_SIZE_K(256-16-16)>;
			read-only;
		};

		/*
		 * The final 16 KiB is reserved for the application.
		 * Storage partition will be used by FCB/LittleFS/NVS
		 * if enabled.
		 */
		storage_partition: partition@7c000 {
			label = "storage";
			reg = <0x7c000 DT_SIZE_K(16)>;
		};
	};
};
